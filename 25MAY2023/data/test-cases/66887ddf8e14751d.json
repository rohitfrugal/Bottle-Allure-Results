{"uid":"66887ddf8e14751d","name":"Create a new Category","fullName":"TestInventory.TestInventory#test_Add_newCategory_2___frugal_latido_com_np____Test_123____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__BikerJacket_jpg____Item_01__Automation_____AT_IT001____This_is_from_an_automated_Script__01____0___Box__","historyId":"df8b9844dd1704216f95ad43bb22980d","time":{"start":1685025770914,"stop":1685025785648,"duration":14734},"status":"failed","statusMessage":"AssertionError: None != True : Adding a New Category Failed","statusTrace":"self = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_2___frugal_latido_com_np____Test_123____E___PO...yData__Image__BikerJacket_jpg____Item_01__Automation_____AT_IT001____This_is_from_an_automated_Script__01____0___Box__>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nImagePath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\BikerJacket.jpg'\nname = 'Item 01 (Automation)', code = 'AT-IT001'\ndesc = 'This is from an automated Script (01)', leather_flag = 0, unit = 'Box'\n\n    @allure.title(f\"Create a new Category\")\n    @allure.story(\"Create a new Category from Add button \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/InventoryData/InventoryTestCase.xlsx\", \"TestInventory\"))\n    @unpack\n    def test_Add_newCategory(self, username, password, ImagePath, name, code, desc, leather_flag, unit):\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n            self.assertEqual(self.Inventory.AddInventory_Items(ImagePath, name, code, desc, leather_flag, unit), True, msg=\"Adding a New Category Failed \")\n        # Checking if assertion failed\n        except AssertionError as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Failed_for_customer\", attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\n>           raise e\n\nTestInventory.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestInventory.py:42: in test_Add_newCategory\n    self.assertEqual(self.Inventory.AddInventory_Items(ImagePath, name, code, desc, leather_flag, unit), True, msg=\"Adding a New Category Failed \")\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: None != True : Adding a New Category Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestInventory","time":{"start":1685025755775,"stop":1685025755775,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: None != True : Adding a New Category Failed","statusTrace":"self = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_2___frugal_latido_com_np____Test_123____E___PO...yData__Image__BikerJacket_jpg____Item_01__Automation_____AT_IT001____This_is_from_an_automated_Script__01____0___Box__>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nImagePath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\BikerJacket.jpg'\nname = 'Item 01 (Automation)', code = 'AT-IT001'\ndesc = 'This is from an automated Script (01)', leather_flag = 0, unit = 'Box'\n\n    @allure.title(f\"Create a new Category\")\n    @allure.story(\"Create a new Category from Add button \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/InventoryData/InventoryTestCase.xlsx\", \"TestInventory\"))\n    @unpack\n    def test_Add_newCategory(self, username, password, ImagePath, name, code, desc, leather_flag, unit):\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n            self.assertEqual(self.Inventory.AddInventory_Items(ImagePath, name, code, desc, leather_flag, unit), True, msg=\"Adding a New Category Failed \")\n        # Checking if assertion failed\n        except AssertionError as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Failed_for_customer\", attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\n>           raise e\n\nTestInventory.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestInventory.py:42: in test_Add_newCategory\n    self.assertEqual(self.Inventory.AddInventory_Items(ImagePath, name, code, desc, leather_flag, unit), True, msg=\"Adding a New Category Failed \")\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: None != True : Adding a New Category Failed","steps":[],"attachments":[{"uid":"6916ec0165915f57","name":"Failed_for_customer","source":"6916ec0165915f57.png","type":"image/png","size":268333},{"uid":"ead6932597a0d484","name":"log","source":"ead6932597a0d484.txt","type":"text/plain","size":131}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestInventory::0","time":{"start":1685026201242,"stop":1685026201242,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"story","value":"Create a new Category from Add button "},{"name":"feature","value":"Inventory"},{"name":"severity","value":"normal"},{"name":"suite","value":"TestInventory"},{"name":"subSuite","value":"TestInventory"},{"name":"host","value":"0day"},{"name":"thread","value":"6780-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestInventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"66887ddf8e14751d.json","parameterValues":[]}