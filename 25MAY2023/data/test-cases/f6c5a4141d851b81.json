{"uid":"f6c5a4141d851b81","name":"Create a New Order for store","fullName":"TestOrder.TestOrder#test_create_order_store_2___frugal_latido_com_np____Test_123____Exemplar__male_____Bronze_Mist_Antique____42____Golden_Antique____Black____Yes____40____Skin_Tight___8__7___34___11__5__9__12__46___7___5_6___Test_003___20000__1000___101012__","historyId":"7e4bbd6c6be20c5cab966233bbc6acb4","time":{"start":1685024287254,"stop":1685024312251,"duration":24997},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[11]/div/div[2]/div/div[2]/div[2]/form/input\"}\n  (Session info: chrome=113.0.5672.127)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00FC8893+48451]\n\t(No symbol) [0x00F5B8A1]\n\t(No symbol) [0x00E65058]\n\t(No symbol) [0x00E90467]\n\t(No symbol) [0x00E9069B]\n\t(No symbol) [0x00EBDD92]\n\t(No symbol) [0x00EAA304]\n\t(No symbol) [0x00EBC482]\n\t(No symbol) [0x00EAA0B6]\n\t(No symbol) [0x00E87E08]\n\t(No symbol) [0x00E88F2D]\n\tGetHandleVerifier [0x01228E3A+2540266]\n\tGetHandleVerifier [0x01268959+2801161]\n\tGetHandleVerifier [0x0126295C+2776588]\n\tGetHandleVerifier [0x01052280+612144]\n\t(No symbol) [0x00F64F6C]\n\t(No symbol) [0x00F611D8]\n\t(No symbol) [0x00F612BB]\n\t(No symbol) [0x00F54857]\n\tBaseThreadInitThunk [0x75467D59+25]\n\tRtlInitializeExceptionChain [0x777AB74B+107]\n\tRtlClearBits [0x777AB6CF+191]","statusTrace":"self = <TestsCases.TestOrder.TestOrder testMethod=test_create_order_store_2___frugal_latido_com_np____Test_123____Exemplar__m...tique____Black____Yes____40____Skin_Tight___8__7___34___11__5__9__12__46___7___5_6___Test_003___20000__1000___101012__>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nproductname = 'Exemplar (male)', leatherProfile = 'Bronze Mist Antique'\nleatherSize = '42', hardware = 'Golden Antique', lining = 'Black'\npolyfill = 'Yes', size = '40', bodytype = 'Skin Tight', length = 8, chest = 7\nwaist = '34', hips = 11, shoulder = 5, sleeves = 9, arms = 12, weight = 46\nfront = '7', armhole = 5.6, remarks = 'Test 003', price = 20000, discount = 1000\nOTP = '101012'\n\n    @allure.title(\"Create a New Order for store\")\n    @allure.story(\"Create a New Order for store\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/OrderTestData/orderTestCase.xlsx\", \"forStore\"))\n    @unpack\n    def test_create_order_store(self, username, password, productname, leatherProfile, leatherSize, hardware, lining,\n                                polyfill, size, bodytype, length, chest, waist, hips, shoulder, sleeves, arms, weight, front,\n                                armhole, remarks, price, discount, OTP):\n        # Login with Admin\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n            self.assertEqual(\n                self.Order.createOrder_Store(productname, leatherProfile, leatherSize, hardware, lining, polyfill,\n                                             size, bodytype, length, chest, waist, hips, shoulder, sleeves, arms,\n                                             weight, front, armhole, remarks, price, discount, OTP),\n                \"Order Succesfully Created\",\n                msg=\"Verification Failed to Create a new user.\")\n    \n        # Checking if assertion failed\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Creating order for Store.\",\n                          attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\n>           raise e\n\nTestOrder.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestOrder.py:94: in test_create_order_store\n    self.Order.createOrder_Store(productname, leatherProfile, leatherSize, hardware, lining, polyfill,\n..\\executions\\OrdersExecutions\\OrderMethods.py:309: in createOrder_Store\n    self.fill_otp_store(OTP)\n..\\executions\\OrdersExecutions\\OrderMethods.py:215: in fill_otp_store\n    self.storePay.enterOTP(OTP)\n..\\Pages\\Order\\Store\\PaymentsStore.py:73: in enterOTP\n    self.driver.find_element(*self.OTP_INPUT).click()\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002016B17DD80>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x75467D59+25]\\\\n\\\\tRtlInitializeExceptionChain [0x777AB74B+107]\\\\n\\\\tRtlClearBits [0x777AB6CF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[11]/div/div[2]/div/div[2]/div[2]/form/input\"}\nE         (Session info: chrome=113.0.5672.127)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00FC8893+48451]\nE       \t(No symbol) [0x00F5B8A1]\nE       \t(No symbol) [0x00E65058]\nE       \t(No symbol) [0x00E90467]\nE       \t(No symbol) [0x00E9069B]\nE       \t(No symbol) [0x00EBDD92]\nE       \t(No symbol) [0x00EAA304]\nE       \t(No symbol) [0x00EBC482]\nE       \t(No symbol) [0x00EAA0B6]\nE       \t(No symbol) [0x00E87E08]\nE       \t(No symbol) [0x00E88F2D]\nE       \tGetHandleVerifier [0x01228E3A+2540266]\nE       \tGetHandleVerifier [0x01268959+2801161]\nE       \tGetHandleVerifier [0x0126295C+2776588]\nE       \tGetHandleVerifier [0x01052280+612144]\nE       \t(No symbol) [0x00F64F6C]\nE       \t(No symbol) [0x00F611D8]\nE       \t(No symbol) [0x00F612BB]\nE       \t(No symbol) [0x00F54857]\nE       \tBaseThreadInitThunk [0x75467D59+25]\nE       \tRtlInitializeExceptionChain [0x777AB74B+107]\nE       \tRtlClearBits [0x777AB6CF+191]\n\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestOrder","time":{"start":1685021911346,"stop":1685021911346,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[11]/div/div[2]/div/div[2]/div[2]/form/input\"}\n  (Session info: chrome=113.0.5672.127)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00FC8893+48451]\n\t(No symbol) [0x00F5B8A1]\n\t(No symbol) [0x00E65058]\n\t(No symbol) [0x00E90467]\n\t(No symbol) [0x00E9069B]\n\t(No symbol) [0x00EBDD92]\n\t(No symbol) [0x00EAA304]\n\t(No symbol) [0x00EBC482]\n\t(No symbol) [0x00EAA0B6]\n\t(No symbol) [0x00E87E08]\n\t(No symbol) [0x00E88F2D]\n\tGetHandleVerifier [0x01228E3A+2540266]\n\tGetHandleVerifier [0x01268959+2801161]\n\tGetHandleVerifier [0x0126295C+2776588]\n\tGetHandleVerifier [0x01052280+612144]\n\t(No symbol) [0x00F64F6C]\n\t(No symbol) [0x00F611D8]\n\t(No symbol) [0x00F612BB]\n\t(No symbol) [0x00F54857]\n\tBaseThreadInitThunk [0x75467D59+25]\n\tRtlInitializeExceptionChain [0x777AB74B+107]\n\tRtlClearBits [0x777AB6CF+191]","statusTrace":"self = <TestsCases.TestOrder.TestOrder testMethod=test_create_order_store_2___frugal_latido_com_np____Test_123____Exemplar__m...tique____Black____Yes____40____Skin_Tight___8__7___34___11__5__9__12__46___7___5_6___Test_003___20000__1000___101012__>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nproductname = 'Exemplar (male)', leatherProfile = 'Bronze Mist Antique'\nleatherSize = '42', hardware = 'Golden Antique', lining = 'Black'\npolyfill = 'Yes', size = '40', bodytype = 'Skin Tight', length = 8, chest = 7\nwaist = '34', hips = 11, shoulder = 5, sleeves = 9, arms = 12, weight = 46\nfront = '7', armhole = 5.6, remarks = 'Test 003', price = 20000, discount = 1000\nOTP = '101012'\n\n    @allure.title(\"Create a New Order for store\")\n    @allure.story(\"Create a New Order for store\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/OrderTestData/orderTestCase.xlsx\", \"forStore\"))\n    @unpack\n    def test_create_order_store(self, username, password, productname, leatherProfile, leatherSize, hardware, lining,\n                                polyfill, size, bodytype, length, chest, waist, hips, shoulder, sleeves, arms, weight, front,\n                                armhole, remarks, price, discount, OTP):\n        # Login with Admin\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n            self.assertEqual(\n                self.Order.createOrder_Store(productname, leatherProfile, leatherSize, hardware, lining, polyfill,\n                                             size, bodytype, length, chest, waist, hips, shoulder, sleeves, arms,\n                                             weight, front, armhole, remarks, price, discount, OTP),\n                \"Order Succesfully Created\",\n                msg=\"Verification Failed to Create a new user.\")\n    \n        # Checking if assertion failed\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Creating order for Store.\",\n                          attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\n>           raise e\n\nTestOrder.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestOrder.py:94: in test_create_order_store\n    self.Order.createOrder_Store(productname, leatherProfile, leatherSize, hardware, lining, polyfill,\n..\\executions\\OrdersExecutions\\OrderMethods.py:309: in createOrder_Store\n    self.fill_otp_store(OTP)\n..\\executions\\OrdersExecutions\\OrderMethods.py:215: in fill_otp_store\n    self.storePay.enterOTP(OTP)\n..\\Pages\\Order\\Store\\PaymentsStore.py:73: in enterOTP\n    self.driver.find_element(*self.OTP_INPUT).click()\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002016B17DD80>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x75467D59+25]\\\\n\\\\tRtlInitializeExceptionChain [0x777AB74B+107]\\\\n\\\\tRtlClearBits [0x777AB6CF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[11]/div/div[2]/div/div[2]/div[2]/form/input\"}\nE         (Session info: chrome=113.0.5672.127)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00FC8893+48451]\nE       \t(No symbol) [0x00F5B8A1]\nE       \t(No symbol) [0x00E65058]\nE       \t(No symbol) [0x00E90467]\nE       \t(No symbol) [0x00E9069B]\nE       \t(No symbol) [0x00EBDD92]\nE       \t(No symbol) [0x00EAA304]\nE       \t(No symbol) [0x00EBC482]\nE       \t(No symbol) [0x00EAA0B6]\nE       \t(No symbol) [0x00E87E08]\nE       \t(No symbol) [0x00E88F2D]\nE       \tGetHandleVerifier [0x01228E3A+2540266]\nE       \tGetHandleVerifier [0x01268959+2801161]\nE       \tGetHandleVerifier [0x0126295C+2776588]\nE       \tGetHandleVerifier [0x01052280+612144]\nE       \t(No symbol) [0x00F64F6C]\nE       \t(No symbol) [0x00F611D8]\nE       \t(No symbol) [0x00F612BB]\nE       \t(No symbol) [0x00F54857]\nE       \tBaseThreadInitThunk [0x75467D59+25]\nE       \tRtlInitializeExceptionChain [0x777AB74B+107]\nE       \tRtlClearBits [0x777AB6CF+191]\n\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException","steps":[],"attachments":[{"uid":"ef6bb81d7df24265","name":"Creating order for Store.","source":"ef6bb81d7df24265.png","type":"image/png","size":94621},{"uid":"148904d059a328ad","name":"log","source":"148904d059a328ad.txt","type":"text/plain","size":961}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestOrder::0","time":{"start":1685024388837,"stop":1685024388837,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"story","value":"Create a New Order for store"},{"name":"feature","value":"Order List"},{"name":"severity","value":"normal"},{"name":"suite","value":"TestOrder"},{"name":"subSuite","value":"TestOrder"},{"name":"host","value":"0day"},{"name":"thread","value":"4200-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestOrder"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"33caa81d983b844c","status":"passed","time":{"start":1684416823509,"stop":1684416867986,"duration":44477}},{"uid":"ec2c0e17a1003b96","status":"passed","time":{"start":1683887549483,"stop":1683887591708,"duration":42225}},{"uid":"ea39c5d6ad02d6b2","status":"passed","time":{"start":1683187677044,"stop":1683187722455,"duration":45411}}]},"tags":[]},"source":"f6c5a4141d851b81.json","parameterValues":[]}