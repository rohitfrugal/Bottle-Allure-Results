{"uid":"45e4d7ddfe51738c","name":"test_01_new_entry_list_1____Automation__Item_59____AT_IT_59____Mulchand___Sons___2000___2023_06_30___10___Excellent____By_Truck____By_Cheque____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__","fullName":"TestReporting.TestReporting#test_01_new_entry_list_1____Automation__Item_59____AT_IT_59____Mulchand___Sons___2000___2023_06_30___10___Excellent____By_Truck____By_Cheque____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__","historyId":"63b18d41bbc773f75d036f0a7f6828b4","time":{"start":1688125417797,"stop":1688125463335,"duration":45538},"description":"Check for new Entry","descriptionHtml":"<p>Check for new Entry</p>\n","status":"failed","statusMessage":"AssertionError: False != True : Verification failed! for Report List.","statusTrace":"self = <TestsCases.TestReporting.TestReporting testMethod=test_01_new_entry_list_1____Automation__Item_59____AT_IT_59____Mulc...cellent____By_Truck____By_Cheque____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__>\nItemName = '(Automation) Item 59', productName = 'AT-IT-59'\nvendor_name = 'Mulchand & Sons', price = 2000, date = '2023-06-30'\nquantity = 10, quality = 'Excellent', transport_mode = 'By Truck'\nPay_mode = 'By Cheque', receiver_name = 'Rohit'\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\Receipt.png'\n\n    @allure.description(\"Check for new Entry\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/ReportData/Report.xlsx\", \"checkReport\"))\n    @unpack\n    def test_01_new_entry_list(self, ItemName, productName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath):\n        self.LoginMethod.nativelogin(\"frugal@latido.com.np\", \"Test@123\")\n        try:\n            self.assertEqual(self.Report.create_inventory_check(ItemName, productName, vendor_name, price, date, quantity, quality,\n                    transport_mode, Pay_mode, receiver_name, imgPath),\n                    True, msg=\"Verification failed! for Report List.\")\n    \n        # Checking if assertion failed\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"verify Report Landing \", attachment_type=AttachmentType.PNG)\n>           raise e\n\nTestReporting.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestReporting.py:51: in test_01_new_entry_list\n    self.assertEqual(self.Report.create_inventory_check(ItemName, productName, vendor_name, price, date, quantity, quality,\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: False != True : Verification failed! for Report List.","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestReporting","time":{"start":1688125417796,"stop":1688125417797,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"Check for new Entry","status":"failed","statusMessage":"AssertionError: False != True : Verification failed! for Report List.","statusTrace":"self = <TestsCases.TestReporting.TestReporting testMethod=test_01_new_entry_list_1____Automation__Item_59____AT_IT_59____Mulc...cellent____By_Truck____By_Cheque____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__>\nItemName = '(Automation) Item 59', productName = 'AT-IT-59'\nvendor_name = 'Mulchand & Sons', price = 2000, date = '2023-06-30'\nquantity = 10, quality = 'Excellent', transport_mode = 'By Truck'\nPay_mode = 'By Cheque', receiver_name = 'Rohit'\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\Receipt.png'\n\n    @allure.description(\"Check for new Entry\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/ReportData/Report.xlsx\", \"checkReport\"))\n    @unpack\n    def test_01_new_entry_list(self, ItemName, productName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath):\n        self.LoginMethod.nativelogin(\"frugal@latido.com.np\", \"Test@123\")\n        try:\n            self.assertEqual(self.Report.create_inventory_check(ItemName, productName, vendor_name, price, date, quantity, quality,\n                    transport_mode, Pay_mode, receiver_name, imgPath),\n                    True, msg=\"Verification failed! for Report List.\")\n    \n        # Checking if assertion failed\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"verify Report Landing \", attachment_type=AttachmentType.PNG)\n>           raise e\n\nTestReporting.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestReporting.py:51: in test_01_new_entry_list\n    self.assertEqual(self.Report.create_inventory_check(ItemName, productName, vendor_name, price, date, quantity, quality,\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: False != True : Verification failed! for Report List.","steps":[],"attachments":[{"uid":"b8d4aa51af8faeab","name":"verify Report Landing ","source":"b8d4aa51af8faeab.png","type":"image/png","size":201868}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestReporting::0","time":{"start":1688125987751,"stop":1688125987751,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Reporting Module Test Cases"},{"name":"severity","value":"normal"},{"name":"suite","value":"TestReporting"},{"name":"subSuite","value":"TestReporting"},{"name":"host","value":"0day"},{"name":"thread","value":"14064-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestReporting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"45e4d7ddfe51738c.json","parameterValues":[]}