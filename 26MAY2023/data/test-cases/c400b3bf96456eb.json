{"uid":"c400b3bf96456eb","name":"Restocking the Items ","fullName":"TestInventory.TestInventory#test_restocking_item_5___frugal_latido_com_np____Test_123____Item_04__Automation_____Silver_Zipper_Supplier___2000___2023_05_23___10___Good____By_Truck____By_Cheque____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__","historyId":"2be9ad7b876c16106ecf02c9f5ef0fd8","time":{"start":1685108968515,"stop":1685108988591,"duration":20076},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00CC8893+48451]\n\t(No symbol) [0x00C5B8A1]\n\t(No symbol) [0x00B65058]\n\t(No symbol) [0x00B90467]\n\t(No symbol) [0x00B9069B]\n\t(No symbol) [0x00BBDD92]\n\t(No symbol) [0x00BAA304]\n\t(No symbol) [0x00BBC482]\n\t(No symbol) [0x00BAA0B6]\n\t(No symbol) [0x00B87E08]\n\t(No symbol) [0x00B88F2D]\n\tGetHandleVerifier [0x00F28E3A+2540266]\n\tGetHandleVerifier [0x00F68959+2801161]\n\tGetHandleVerifier [0x00F6295C+2776588]\n\tGetHandleVerifier [0x00D52280+612144]\n\t(No symbol) [0x00C64F6C]\n\t(No symbol) [0x00C611D8]\n\t(No symbol) [0x00C612BB]\n\t(No symbol) [0x00C54857]\n\tBaseThreadInitThunk [0x76E37D59+25]\n\tRtlInitializeExceptionChain [0x77D2B74B+107]\n\tRtlClearBits [0x77D2B6CF+191]","statusTrace":"self = <TestsCases.TestInventory.TestInventory testMethod=test_restocking_item_5___frugal_latido_com_np____Test_123____Item_0...___Good____By_Truck____By_Cheque____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nItmeName = 'Item 04 (Automation)', vendor_name = 'Silver Zipper Supplier'\nprice = 2000, date = '2023-05-23', quantity = 10, quality = 'Good'\ntransport_mode = 'By Truck', Pay_mode = 'By Cheque', receiver_name = 'Rohit'\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\Receipt.png'\n\n    @allure.title(f\"Restocking the Items \")\n    @allure.story(\"Selecting a new Category and restocking the Items \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/InventoryData/InventoryTestCase.xlsx\", \"restocking\"))\n    @unpack\n    def test_restocking_item(self, username, password, ItmeName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath):\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n>           self.assertEqual(self.Inventory.stockItem_for_normal_item(ItmeName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath),\n                             True, msg=\"Adding a New Stock Failed \")\n\nTestInventory.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\executions\\InventoryExecutions\\InventoryMethods.py:80: in stockItem_for_normal_item\n    self.Inventory.checkItemStatus()\n..\\Pages\\Inventory\\InventoryPage.py:200: in checkItemStatus\n    status = self.wait.until(EC.visibility_of_element_located(self.ITEM_STATUS)).text\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1d16daf091fcc29e1c0141479ba27774\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000015D20789C60>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00CC8893+48451]\nE       \t(No symbol) [0x00C5B8A1]\nE       \t(No symbol) [0x00B65058]\nE       \t(No symbol) [0x00B90467]\nE       \t(No symbol) [0x00B9069B]\nE       \t(No symbol) [0x00BBDD92]\nE       \t(No symbol) [0x00BAA304]\nE       \t(No symbol) [0x00BBC482]\nE       \t(No symbol) [0x00BAA0B6]\nE       \t(No symbol) [0x00B87E08]\nE       \t(No symbol) [0x00B88F2D]\nE       \tGetHandleVerifier [0x00F28E3A+2540266]\nE       \tGetHandleVerifier [0x00F68959+2801161]\nE       \tGetHandleVerifier [0x00F6295C+2776588]\nE       \tGetHandleVerifier [0x00D52280+612144]\nE       \t(No symbol) [0x00C64F6C]\nE       \t(No symbol) [0x00C611D8]\nE       \t(No symbol) [0x00C612BB]\nE       \t(No symbol) [0x00C54857]\nE       \tBaseThreadInitThunk [0x76E37D59+25]\nE       \tRtlInitializeExceptionChain [0x77D2B74B+107]\nE       \tRtlClearBits [0x77D2B6CF+191]\n\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestInventory","time":{"start":1685108638532,"stop":1685108638532,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00CC8893+48451]\n\t(No symbol) [0x00C5B8A1]\n\t(No symbol) [0x00B65058]\n\t(No symbol) [0x00B90467]\n\t(No symbol) [0x00B9069B]\n\t(No symbol) [0x00BBDD92]\n\t(No symbol) [0x00BAA304]\n\t(No symbol) [0x00BBC482]\n\t(No symbol) [0x00BAA0B6]\n\t(No symbol) [0x00B87E08]\n\t(No symbol) [0x00B88F2D]\n\tGetHandleVerifier [0x00F28E3A+2540266]\n\tGetHandleVerifier [0x00F68959+2801161]\n\tGetHandleVerifier [0x00F6295C+2776588]\n\tGetHandleVerifier [0x00D52280+612144]\n\t(No symbol) [0x00C64F6C]\n\t(No symbol) [0x00C611D8]\n\t(No symbol) [0x00C612BB]\n\t(No symbol) [0x00C54857]\n\tBaseThreadInitThunk [0x76E37D59+25]\n\tRtlInitializeExceptionChain [0x77D2B74B+107]\n\tRtlClearBits [0x77D2B6CF+191]","statusTrace":"self = <TestsCases.TestInventory.TestInventory testMethod=test_restocking_item_5___frugal_latido_com_np____Test_123____Item_0...___Good____By_Truck____By_Cheque____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nItmeName = 'Item 04 (Automation)', vendor_name = 'Silver Zipper Supplier'\nprice = 2000, date = '2023-05-23', quantity = 10, quality = 'Good'\ntransport_mode = 'By Truck', Pay_mode = 'By Cheque', receiver_name = 'Rohit'\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\Receipt.png'\n\n    @allure.title(f\"Restocking the Items \")\n    @allure.story(\"Selecting a new Category and restocking the Items \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/InventoryData/InventoryTestCase.xlsx\", \"restocking\"))\n    @unpack\n    def test_restocking_item(self, username, password, ItmeName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath):\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n>           self.assertEqual(self.Inventory.stockItem_for_normal_item(ItmeName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath),\n                             True, msg=\"Adding a New Stock Failed \")\n\nTestInventory.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\executions\\InventoryExecutions\\InventoryMethods.py:80: in stockItem_for_normal_item\n    self.Inventory.checkItemStatus()\n..\\Pages\\Inventory\\InventoryPage.py:200: in checkItemStatus\n    status = self.wait.until(EC.visibility_of_element_located(self.ITEM_STATUS)).text\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1d16daf091fcc29e1c0141479ba27774\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000015D20789C60>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00CC8893+48451]\nE       \t(No symbol) [0x00C5B8A1]\nE       \t(No symbol) [0x00B65058]\nE       \t(No symbol) [0x00B90467]\nE       \t(No symbol) [0x00B9069B]\nE       \t(No symbol) [0x00BBDD92]\nE       \t(No symbol) [0x00BAA304]\nE       \t(No symbol) [0x00BBC482]\nE       \t(No symbol) [0x00BAA0B6]\nE       \t(No symbol) [0x00B87E08]\nE       \t(No symbol) [0x00B88F2D]\nE       \tGetHandleVerifier [0x00F28E3A+2540266]\nE       \tGetHandleVerifier [0x00F68959+2801161]\nE       \tGetHandleVerifier [0x00F6295C+2776588]\nE       \tGetHandleVerifier [0x00D52280+612144]\nE       \t(No symbol) [0x00C64F6C]\nE       \t(No symbol) [0x00C611D8]\nE       \t(No symbol) [0x00C612BB]\nE       \t(No symbol) [0x00C54857]\nE       \tBaseThreadInitThunk [0x76E37D59+25]\nE       \tRtlInitializeExceptionChain [0x77D2B74B+107]\nE       \tRtlClearBits [0x77D2B6CF+191]\n\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException","steps":[],"attachments":[{"uid":"eeb8d47434f6948e","name":"log","source":"eeb8d47434f6948e.txt","type":"text/plain","size":3344}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestInventory::0","time":{"start":1685109042685,"stop":1685109042685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"severity","value":"normal"},{"name":"story","value":"Selecting a new Category and restocking the Items "},{"name":"feature","value":"Inventory"},{"name":"suite","value":"TestInventory"},{"name":"subSuite","value":"TestInventory"},{"name":"host","value":"0day"},{"name":"thread","value":"12484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestInventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"f78e57d9f03a3f1","status":"passed","time":{"start":1685026131533,"stop":1685026163854,"duration":32321}}]},"tags":[]},"source":"c400b3bf96456eb.json","parameterValues":[]}