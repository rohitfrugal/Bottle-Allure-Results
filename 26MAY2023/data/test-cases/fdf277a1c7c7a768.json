{"uid":"fdf277a1c7c7a768","name":"Selecting  a new Category","fullName":"TestInventory.TestInventory#test_Add_newCategory_item_5___frugal_latido_com_np____Test_123_____Automation__Item_04____Test05____T05____AT05____Auto_Testing_05____Black____Performing_this_using_automation_scripts____1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Black_Plain_Jacket_jpg____Frugal_Automation____50_","historyId":"498ab262c0538fa73f356e9b3ccc140a","time":{"start":1685108839048,"stop":1685108859387,"duration":20339},"status":"failed","statusMessage":"AssertionError: False != True : Adding a New Category Failed","statusTrace":"self = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_item_5___frugal_latido_com_np____Test_123_____..._1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Black_Plain_Jacket_jpg____Frugal_Automation____50_>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nItemName = '(Automation) Item 04', name = 'Test05', code = 'T05', sku = 'AT05'\ntags = 'Auto Testing 05', color = 'Black'\ndescription = 'Performing this using automation scripts ', l_quantity = 1\nh_quantity = 1\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\Black Plain Jacket.jpg'\nbrand = 'Frugal Automation ', weight = 50\n\n    @allure.title(f\"Selecting  a new Category\")\n    @allure.story(\"Selecting a new Category from Category Carousel \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/InventoryData/InventoryTestCase.xlsx\", \"ItemCarousel\"))\n    @unpack\n    def test_Add_newCategory_item(self, username, password, ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight):\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n            self.assertEqual(self.Inventory.selectCarouselItems(ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight),\n                             True, msg=\"Adding a New Category Failed \")\n        # Checking if assertion failed\n        except AssertionError as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Failed_for_customer\", attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\n>           raise e\n\nTestInventory.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestInventory.py:58: in test_Add_newCategory_item\n    self.assertEqual(self.Inventory.selectCarouselItems(ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight),\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: False != True : Adding a New Category Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestInventory","time":{"start":1685108638532,"stop":1685108638532,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: False != True : Adding a New Category Failed","statusTrace":"self = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_item_5___frugal_latido_com_np____Test_123_____..._1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Black_Plain_Jacket_jpg____Frugal_Automation____50_>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nItemName = '(Automation) Item 04', name = 'Test05', code = 'T05', sku = 'AT05'\ntags = 'Auto Testing 05', color = 'Black'\ndescription = 'Performing this using automation scripts ', l_quantity = 1\nh_quantity = 1\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\Black Plain Jacket.jpg'\nbrand = 'Frugal Automation ', weight = 50\n\n    @allure.title(f\"Selecting  a new Category\")\n    @allure.story(\"Selecting a new Category from Category Carousel \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/InventoryData/InventoryTestCase.xlsx\", \"ItemCarousel\"))\n    @unpack\n    def test_Add_newCategory_item(self, username, password, ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight):\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n            self.assertEqual(self.Inventory.selectCarouselItems(ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight),\n                             True, msg=\"Adding a New Category Failed \")\n        # Checking if assertion failed\n        except AssertionError as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Failed_for_customer\", attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\n>           raise e\n\nTestInventory.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestInventory.py:58: in test_Add_newCategory_item\n    self.assertEqual(self.Inventory.selectCarouselItems(ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight),\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: False != True : Adding a New Category Failed","steps":[],"attachments":[{"uid":"c996960de734e4ef","name":"Failed_for_customer","source":"c996960de734e4ef.png","type":"image/png","size":136285},{"uid":"de3695c89db3b96","name":"log","source":"de3695c89db3b96.txt","type":"text/plain","size":3559}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestInventory::0","time":{"start":1685109042685,"stop":1685109042685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Inventory"},{"name":"severity","value":"normal"},{"name":"story","value":"Selecting a new Category from Category Carousel "},{"name":"suite","value":"TestInventory"},{"name":"subSuite","value":"TestInventory"},{"name":"host","value":"0day"},{"name":"thread","value":"12484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestInventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"fdf277a1c7c7a768.json","parameterValues":[]}