{"uid":"2bdfd320cd242c8a","name":"Searching the Items ","fullName":"TestInventory.TestInventory#test_search_item_1___frugal_latido_com_np____Test_123____TAT11B__","historyId":"5ff26d3feffe3af744b807d5acfd29b9","time":{"start":1685109025460,"stop":1685109042665,"duration":17205},"status":"failed","statusMessage":"AssertionError: None != True : Adding a New Stock Failed","statusTrace":"self = <TestsCases.TestInventory.TestInventory testMethod=test_search_item_1___frugal_latido_com_np____Test_123____TAT11B__>\nusername = 'frugal@latido.com.np', password = 'Test@123', ItmeName = 'TAT11B'\n\n    @allure.title(f\"Searching the Items \")\n    @allure.story(\"Searching the Items from the search and adding a new Item to it\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/InventoryData/InventoryTestCase.xlsx\", \"searchItem\"))\n    @unpack\n    def test_search_item(self, username, password, ItmeName):\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n            self.assertEqual(self.Inventory.search_item(ItmeName),\n                             True, msg=\"Adding a New Stock Failed \")\n        # Checking if assertion failed\n        except AssertionError as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Failed_Restocking_Items\", attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\n>           raise e\n\nTestInventory.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestInventory.py:93: in test_search_item\n    self.assertEqual(self.Inventory.search_item(ItmeName),\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: None != True : Adding a New Stock Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestInventory","time":{"start":1685108638532,"stop":1685108638532,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: None != True : Adding a New Stock Failed","statusTrace":"self = <TestsCases.TestInventory.TestInventory testMethod=test_search_item_1___frugal_latido_com_np____Test_123____TAT11B__>\nusername = 'frugal@latido.com.np', password = 'Test@123', ItmeName = 'TAT11B'\n\n    @allure.title(f\"Searching the Items \")\n    @allure.story(\"Searching the Items from the search and adding a new Item to it\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/InventoryData/InventoryTestCase.xlsx\", \"searchItem\"))\n    @unpack\n    def test_search_item(self, username, password, ItmeName):\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n            self.assertEqual(self.Inventory.search_item(ItmeName),\n                             True, msg=\"Adding a New Stock Failed \")\n        # Checking if assertion failed\n        except AssertionError as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Failed_Restocking_Items\", attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\n>           raise e\n\nTestInventory.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestInventory.py:93: in test_search_item\n    self.assertEqual(self.Inventory.search_item(ItmeName),\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: None != True : Adding a New Stock Failed","steps":[],"attachments":[{"uid":"d0aacb05063a04d1","name":"Failed_Restocking_Items","source":"d0aacb05063a04d1.png","type":"image/png","size":77079},{"uid":"1299d3d7bb6e9c72","name":"log","source":"1299d3d7bb6e9c72.txt","type":"text/plain","size":128}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestInventory::0","time":{"start":1685109042685,"stop":1685109042685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Inventory"},{"name":"story","value":"Searching the Items from the search and adding a new Item to it"},{"name":"suite","value":"TestInventory"},{"name":"subSuite","value":"TestInventory"},{"name":"host","value":"0day"},{"name":"thread","value":"12484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestInventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2bdfd320cd242c8a.json","parameterValues":[]}