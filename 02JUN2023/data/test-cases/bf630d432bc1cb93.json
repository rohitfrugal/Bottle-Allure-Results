{"uid":"bf630d432bc1cb93","name":"Synchronization a Vendor ","fullName":"TestVendor.TestVendors#test_sync_vendor_1___frugal_latido_com_np____Test_123____E___POM_for_Bottle__WebApp__TestData__Vendor__Sample_Data_From_Bottle_Testing__Vendor__vendor1_jpg____TE_VE_IN15____Del_Vendor_15____vendor1_mail_com___9800001010___Auomator1____Siliguri____This_is_an_Automated_generated_descriptions____Tester_1____Siliguri___9800002010___test_mail_com____Test_of_Vendor_module___2000___2023_05_19___10___Excellent____By_Truck____By_Cheque____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__","historyId":"23ed9854a67539b2cfe2efd6ded70425","time":{"start":1685708746498,"stop":1685708779916,"duration":33418},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x009FA813+48355]\n\t(No symbol) [0x0098C4B1]\n\t(No symbol) [0x00895358]\n\t(No symbol) [0x008C09A5]\n\t(No symbol) [0x008C0B3B]\n\t(No symbol) [0x008EE232]\n\t(No symbol) [0x008DA784]\n\t(No symbol) [0x008EC922]\n\t(No symbol) [0x008DA536]\n\t(No symbol) [0x008B82DC]\n\t(No symbol) [0x008B93DD]\n\tGetHandleVerifier [0x00C5AABD+2539405]\n\tGetHandleVerifier [0x00C9A78F+2800735]\n\tGetHandleVerifier [0x00C9456C+2775612]\n\tGetHandleVerifier [0x00A851E0+616112]\n\t(No symbol) [0x00995F8C]\n\t(No symbol) [0x00992328]\n\t(No symbol) [0x0099240B]\n\t(No symbol) [0x00984FF7]\n\tBaseThreadInitThunk [0x758E7D59+25]\n\tRtlInitializeExceptionChain [0x779FB74B+107]\n\tRtlClearBits [0x779FB6CF+191]","statusTrace":"self = <TestsCases.TestVendor.TestVendors testMethod=test_sync_vendor_1___frugal_latido_com_np____Test_123____E___POM_for_Bot...cellent____By_Truck____By_Cheque____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nIconPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\Vendor\\\\Sample Data From Bottle Testing\\\\Vendor\\\\vendor1.jpg'\nvendor_id = 'TE-VE-IN15', vendor_name = 'Del_Vendor 15'\nvendor_email = 'vendor1@mail.com', vendor_phone = 9800001010\nsupply_type = 'Auomator1', location = 'Siliguri'\ndescriptions = 'This is an Automated generated descriptions'\ncontact_name = 'Tester 1', contact_location = 'Siliguri'\ncontact_number = 9800002010, contact_email = 'test@mail.com'\nItmeName = 'Test of Vendor module', price = 2000, date = '2023-05-19'\nquantity = 10, quality = 'Excellent', transport_mode = 'By Truck'\nPay_mode = 'By Cheque', receiver_name = 'Rohit'\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\Receipt.png'\n\n    @allure.title(f\"Synchronization a Vendor \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/Vendor/VendorData.xlsx\", \"syncVendor\"))\n    @unpack\n    def test_sync_vendor(self, username, password, IconPath, vendor_id, vendor_name, vendor_email, vendor_phone, supply_type,\n                         location, descriptions, contact_name, contact_location, contact_number, contact_email,\n                         ItmeName, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath):\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n            self.assertEqual(self.vendor.add_stock(IconPath, vendor_id, vendor_name, vendor_email, vendor_phone, supply_type,\n                            location, descriptions, contact_name, contact_location, contact_number, contact_email,\n                            ItmeName, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath),\n                             True, msg=\"Deleting a vendor failed!\")\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Deleting a Vendor Failed\",\n                          attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element.\\n {str(e)}\")\n>           raise e\n\nTestVendor.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestVendor.py:115: in test_sync_vendor\n    self.assertEqual(self.vendor.add_stock(IconPath, vendor_id, vendor_name, vendor_email, vendor_phone, supply_type,\n..\\executions\\VendorExecutions\\VendorMethod.py:163: in add_stock\n    return self.Inventory.stockItem_for_normal_item(ItmeName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath)\n..\\executions\\InventoryExecutions\\InventoryMethods.py:84: in stockItem_for_normal_item\n    self.Inventory.click_on_Product_image()\n..\\Pages\\Inventory\\InventoryPage.py:205: in click_on_Product_image\n    return self.wait.until(EC.visibility_of_element_located(self.PRODUCT_IMAGE)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ed9a45267ae765e7892faad05fcd9796\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000021A7E3A3910>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x009FA813+48355]\nE       \t(No symbol) [0x0098C4B1]\nE       \t(No symbol) [0x00895358]\nE       \t(No symbol) [0x008C09A5]\nE       \t(No symbol) [0x008C0B3B]\nE       \t(No symbol) [0x008EE232]\nE       \t(No symbol) [0x008DA784]\nE       \t(No symbol) [0x008EC922]\nE       \t(No symbol) [0x008DA536]\nE       \t(No symbol) [0x008B82DC]\nE       \t(No symbol) [0x008B93DD]\nE       \tGetHandleVerifier [0x00C5AABD+2539405]\nE       \tGetHandleVerifier [0x00C9A78F+2800735]\nE       \tGetHandleVerifier [0x00C9456C+2775612]\nE       \tGetHandleVerifier [0x00A851E0+616112]\nE       \t(No symbol) [0x00995F8C]\nE       \t(No symbol) [0x00992328]\nE       \t(No symbol) [0x0099240B]\nE       \t(No symbol) [0x00984FF7]\nE       \tBaseThreadInitThunk [0x758E7D59+25]\nE       \tRtlInitializeExceptionChain [0x779FB74B+107]\nE       \tRtlClearBits [0x779FB6CF+191]\n\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestVendors","time":{"start":1685708421911,"stop":1685708421911,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x009FA813+48355]\n\t(No symbol) [0x0098C4B1]\n\t(No symbol) [0x00895358]\n\t(No symbol) [0x008C09A5]\n\t(No symbol) [0x008C0B3B]\n\t(No symbol) [0x008EE232]\n\t(No symbol) [0x008DA784]\n\t(No symbol) [0x008EC922]\n\t(No symbol) [0x008DA536]\n\t(No symbol) [0x008B82DC]\n\t(No symbol) [0x008B93DD]\n\tGetHandleVerifier [0x00C5AABD+2539405]\n\tGetHandleVerifier [0x00C9A78F+2800735]\n\tGetHandleVerifier [0x00C9456C+2775612]\n\tGetHandleVerifier [0x00A851E0+616112]\n\t(No symbol) [0x00995F8C]\n\t(No symbol) [0x00992328]\n\t(No symbol) [0x0099240B]\n\t(No symbol) [0x00984FF7]\n\tBaseThreadInitThunk [0x758E7D59+25]\n\tRtlInitializeExceptionChain [0x779FB74B+107]\n\tRtlClearBits [0x779FB6CF+191]","statusTrace":"self = <TestsCases.TestVendor.TestVendors testMethod=test_sync_vendor_1___frugal_latido_com_np____Test_123____E___POM_for_Bot...cellent____By_Truck____By_Cheque____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nIconPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\Vendor\\\\Sample Data From Bottle Testing\\\\Vendor\\\\vendor1.jpg'\nvendor_id = 'TE-VE-IN15', vendor_name = 'Del_Vendor 15'\nvendor_email = 'vendor1@mail.com', vendor_phone = 9800001010\nsupply_type = 'Auomator1', location = 'Siliguri'\ndescriptions = 'This is an Automated generated descriptions'\ncontact_name = 'Tester 1', contact_location = 'Siliguri'\ncontact_number = 9800002010, contact_email = 'test@mail.com'\nItmeName = 'Test of Vendor module', price = 2000, date = '2023-05-19'\nquantity = 10, quality = 'Excellent', transport_mode = 'By Truck'\nPay_mode = 'By Cheque', receiver_name = 'Rohit'\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\Receipt.png'\n\n    @allure.title(f\"Synchronization a Vendor \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/Vendor/VendorData.xlsx\", \"syncVendor\"))\n    @unpack\n    def test_sync_vendor(self, username, password, IconPath, vendor_id, vendor_name, vendor_email, vendor_phone, supply_type,\n                         location, descriptions, contact_name, contact_location, contact_number, contact_email,\n                         ItmeName, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath):\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n            self.assertEqual(self.vendor.add_stock(IconPath, vendor_id, vendor_name, vendor_email, vendor_phone, supply_type,\n                            location, descriptions, contact_name, contact_location, contact_number, contact_email,\n                            ItmeName, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath),\n                             True, msg=\"Deleting a vendor failed!\")\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Deleting a Vendor Failed\",\n                          attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element.\\n {str(e)}\")\n>           raise e\n\nTestVendor.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestVendor.py:115: in test_sync_vendor\n    self.assertEqual(self.vendor.add_stock(IconPath, vendor_id, vendor_name, vendor_email, vendor_phone, supply_type,\n..\\executions\\VendorExecutions\\VendorMethod.py:163: in add_stock\n    return self.Inventory.stockItem_for_normal_item(ItmeName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath)\n..\\executions\\InventoryExecutions\\InventoryMethods.py:84: in stockItem_for_normal_item\n    self.Inventory.click_on_Product_image()\n..\\Pages\\Inventory\\InventoryPage.py:205: in click_on_Product_image\n    return self.wait.until(EC.visibility_of_element_located(self.PRODUCT_IMAGE)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ed9a45267ae765e7892faad05fcd9796\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000021A7E3A3910>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x009FA813+48355]\nE       \t(No symbol) [0x0098C4B1]\nE       \t(No symbol) [0x00895358]\nE       \t(No symbol) [0x008C09A5]\nE       \t(No symbol) [0x008C0B3B]\nE       \t(No symbol) [0x008EE232]\nE       \t(No symbol) [0x008DA784]\nE       \t(No symbol) [0x008EC922]\nE       \t(No symbol) [0x008DA536]\nE       \t(No symbol) [0x008B82DC]\nE       \t(No symbol) [0x008B93DD]\nE       \tGetHandleVerifier [0x00C5AABD+2539405]\nE       \tGetHandleVerifier [0x00C9A78F+2800735]\nE       \tGetHandleVerifier [0x00C9456C+2775612]\nE       \tGetHandleVerifier [0x00A851E0+616112]\nE       \t(No symbol) [0x00995F8C]\nE       \t(No symbol) [0x00992328]\nE       \t(No symbol) [0x0099240B]\nE       \t(No symbol) [0x00984FF7]\nE       \tBaseThreadInitThunk [0x758E7D59+25]\nE       \tRtlInitializeExceptionChain [0x779FB74B+107]\nE       \tRtlClearBits [0x779FB6CF+191]\n\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException","steps":[],"attachments":[{"uid":"55dec04cd4669ed4","name":"Deleting a Vendor Failed","source":"55dec04cd4669ed4.png","type":"image/png","size":163920},{"uid":"93a7847361754fda","name":"log","source":"93a7847361754fda.txt","type":"text/plain","size":5642}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestVendors::0","time":{"start":1685709135619,"stop":1685709135620,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Inventory Dashboard"},{"name":"suite","value":"TestVendor"},{"name":"subSuite","value":"TestVendors"},{"name":"host","value":"0day"},{"name":"thread","value":"18844-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestVendor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"bf630d432bc1cb93.json","parameterValues":[]}