{"uid":"e32ce057df9ee432","name":"Create a new Order for new Customer","fullName":"TestOrder.TestOrder#test_create_new_user_order_1___frugal_latido_com_np____Test_123____9881012081____abced_Test_1____testuser81_mail_com____2023_05_29____Siliguri____male____Ek__male_____Black_Sheep____38____Silver____Black____No____40___5_6__4_4__5__46__8__12__11__7__1__9___Fit____Test_001____2023_06_29___100900_","historyId":"f3d1f93932e06fd87f02de7df94db7e5","time":{"start":1685710354885,"stop":1685710388645,"duration":33760},"status":"broken","statusMessage":"TypeError: catching classes that do not inherit from BaseException is not allowed","statusTrace":"self = <Pages.Order.Customer.CreateNewUser.CreateNewUser object at 0x000002065426A1A0>\naddress = 'Siliguri'\n\n    def input_address(self, address):\n        try:\n            user_address = self.wait.until(EC.visibility_of_element_located(self.InputAddress))\n            user_address.send_keys(address)\n            time.sleep(1)\n            user_address.send_keys(Keys.SPACE)\n>           self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, \"pac-container\")))\n\n..\\Pages\\Order\\Customer\\CreateNewUser.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1a6bca2afc15035b9dae0e873c134071\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x00000206541AB010>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x009FA813+48355]\nE       \t(No symbol) [0x0098C4B1]\nE       \t(No symbol) [0x00895358]\nE       \t(No symbol) [0x008C09A5]\nE       \t(No symbol) [0x008C0B3B]\nE       \t(No symbol) [0x008EE232]\nE       \t(No symbol) [0x008DA784]\nE       \t(No symbol) [0x008EC922]\nE       \t(No symbol) [0x008DA536]\nE       \t(No symbol) [0x008B82DC]\nE       \t(No symbol) [0x008B93DD]\nE       \tGetHandleVerifier [0x00C5AABD+2539405]\nE       \tGetHandleVerifier [0x00C9A78F+2800735]\nE       \tGetHandleVerifier [0x00C9456C+2775612]\nE       \tGetHandleVerifier [0x00A851E0+616112]\nE       \t(No symbol) [0x00995F8C]\nE       \t(No symbol) [0x00992328]\nE       \t(No symbol) [0x0099240B]\nE       \t(No symbol) [0x00984FF7]\nE       \tBaseThreadInitThunk [0x758E7D59+25]\nE       \tRtlInitializeExceptionChain [0x779FB74B+107]\nE       \tRtlClearBits [0x779FB6CF+191]\n\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <TestsCases.TestOrder.TestOrder testMethod=test_create_new_user_order_1___frugal_latido_com_np____Test_123____98810120...p____38____Silver____Black____No____40___5_6__4_4__5__46__8__12__11__7__1__9___Fit____Test_001____2023_06_29___100900_>\nusername = 'frugal@latido.com.np', password = 'Test@123'\ncontactNo = '9881012081', name = 'abced Test 1', email = 'testuser81@mail.com'\ndob = '2023-05-29', address = 'Siliguri', gender = 'male'\nproductname = 'Ek (male)', leatherProfile = 'Black Sheep', leatherSize = '38'\nhardware = 'Silver', lining = 'Black', polyfill = 'No', size = '40'\narmhole = 5.6, height = 4.4, shoulder = 5, weight = 46, length = 8, arms = 12\nhips = 11, chest = 7, waist = 1, sleeves = 9, bodytype = 'Fit'\nremark = 'Test 001', date = '2023-06-29', OTP = 100900\n\n    @allure.title(f\"Create a new Order for new Customer\")\n    @allure.story(\"Create an Order for new Customer \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/OrderTestData/orderTestCase.xlsx\", \"forNewCustomer\"))\n    @unpack\n    def test_create_new_user_order(self, username, password, contactNo, name, email, dob, address, gender, productname,\n                                   leatherProfile, leatherSize, hardware, lining, polyfill, size, armhole, height, shoulder, weight,\n                                   length, arms, hips, chest, waist, sleeves, bodytype, remark, date, OTP):\n        self.LoginMethod.nativelogin(self.driver, username, password)\n        try:\n            self.assertEqual(\n>               self.Order.create_new_user_order(contactNo, name, email, dob, address, gender, productname,\n                                                 leatherProfile, leatherSize, hardware, lining, polyfill, size, armhole, height,\n                                                 shoulder, weight, length, arms, hips, chest, waist, sleeves, bodytype, remark,\n                                                 date, OTP),\n                \"Order Succesfully Created\", msg=\"Verification Failed to Create a new Order.\")\n\nTestOrder.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\executions\\OrdersExecutions\\OrderMethods.py:317: in create_new_user_order\n    self.create_new_user(contactNo, name, email, dob, address)\n..\\executions\\OrdersExecutions\\OrderMethods.py:81: in create_new_user\n    self.fill_form(name, email, dob, address)\n..\\executions\\OrdersExecutions\\OrderMethods.py:71: in fill_form\n    self.createUser.input_address(address)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.Order.Customer.CreateNewUser.CreateNewUser object at 0x000002065426A1A0>\naddress = 'Siliguri'\n\n    def input_address(self, address):\n        try:\n            user_address = self.wait.until(EC.visibility_of_element_located(self.InputAddress))\n            user_address.send_keys(address)\n            time.sleep(1)\n            user_address.send_keys(Keys.SPACE)\n            self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, \"pac-container\")))\n            time.sleep(1)\n            user_address.send_keys(Keys.DOWN)\n            time.sleep(1)\n            self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, \"pac-item\"))).click()\n            time.sleep(1)\n>       except {TimeoutException, NoSuchElementException, Exceptions} as e:\nE       TypeError: catching classes that do not inherit from BaseException is not allowed\n\n..\\Pages\\Order\\Customer\\CreateNewUser.py:71: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestOrder","time":{"start":1685709569663,"stop":1685709569663,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"_unittest_setUpClass_fixture_TestOrder::0","time":{"start":1685711070089,"stop":1685711070089,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"Order List"},{"name":"story","value":"Create an Order for new Customer "},{"name":"severity","value":"normal"},{"name":"suite","value":"TestOrder"},{"name":"subSuite","value":"TestOrder"},{"name":"host","value":"0day"},{"name":"thread","value":"15292-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestOrder"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"e32ce057df9ee432.json","parameterValues":[]}