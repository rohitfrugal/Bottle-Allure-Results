{"uid":"1f2469d03e86c708","name":"Selecting  a new Category","fullName":"TestInventory.TestInventory#test_Add_newCategory_item_6___frugal_latido_com_np____Test_123_____Automation__Item_64____AT_IT_64____T064____AT064____Auto_Testing_64____Black____Performing_this_using_automation_scripts____1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__BrowN_Leather_Beta_png____Frugal_Automation____50_","historyId":"eca20cd84dee3a28cad50c34d5dd582e","time":{"start":1687504114406,"stop":1687504145412,"duration":31006},"description":"Selecting a new Category from Category Carousel ","descriptionHtml":"<p>Selecting a new Category from Category Carousel</p>\n","status":"broken","statusMessage":"AttributeError: 'TestInventory' object has no attribute 'log'","statusTrace":"self = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_item_6___frugal_latido_com_np____Test_123_____..._1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__BrowN_Leather_Beta_png____Frugal_Automation____50_>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nItemName = '(Automation) Item 64', name = 'AT-IT-64', code = 'T064'\nsku = 'AT064', tags = 'Auto Testing 64', color = 'Black'\ndescription = 'Performing this using automation scripts ', l_quantity = 1\nh_quantity = 1\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\BrowN Leather Beta.png'\nbrand = 'Frugal Automation ', weight = 50\n\n    @allure.title(f\"Selecting  a new Category\")\n    @allure.description(\"Selecting a new Category from Category Carousel \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/InventoryData/InventoryTestCase.xlsx\", \"ItemCarousel\"))\n    @unpack\n    def test_Add_newCategory_item(self, username, password, ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight):\n        self.LoginMethod.nativelogin(username, password)\n        try:\n>           self.assertEqual(self.Inventory.selectCarouselItems(ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight),\n                             True, msg=\"Adding a New Category Failed \")\n\nTestInventory.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_item_6___frugal_latido_com_np____Test_123_____..._1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__BrowN_Leather_Beta_png____Frugal_Automation____50_>\nfirst = None, second = True, msg = 'Adding a New Category Failed '\n\n    def _patched_equals(self, first, second, msg=None):\n        try:\n>           old(self, first, second, msg)\n\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_item_6___frugal_latido_com_np____Test_123_____..._1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__BrowN_Leather_Beta_png____Frugal_Automation____50_>\nfirst = None, second = True, msg = 'Adding a New Category Failed '\n\n    def assertEqual(self, first, second, msg=None):\n        \"\"\"Fail if the two objects are unequal as determined by the '=='\n           operator.\n        \"\"\"\n        assertion_func = self._getAssertEqualityFunc(first, second)\n>       assertion_func(first, second, msg=msg)\n\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python310\\lib\\unittest\\case.py:845: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_item_6___frugal_latido_com_np____Test_123_____..._1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__BrowN_Leather_Beta_png____Frugal_Automation____50_>\nfirst = None, second = True\nmsg = 'None != True : Adding a New Category Failed '\n\n    def _baseAssertEqual(self, first, second, msg=None):\n        \"\"\"The default assertEqual implementation, not type specific.\"\"\"\n        if not first == second:\n            standardMsg = '%s != %s' % _common_shorten_repr(first, second)\n            msg = self._formatMessage(msg, standardMsg)\n>           raise self.failureException(msg)\nE           AssertionError: None != True : Adding a New Category Failed\n\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python310\\lib\\unittest\\case.py:838: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_item_6___frugal_latido_com_np____Test_123_____..._1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__BrowN_Leather_Beta_png____Frugal_Automation____50_>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nItemName = '(Automation) Item 64', name = 'AT-IT-64', code = 'T064'\nsku = 'AT064', tags = 'Auto Testing 64', color = 'Black'\ndescription = 'Performing this using automation scripts ', l_quantity = 1\nh_quantity = 1\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\BrowN Leather Beta.png'\nbrand = 'Frugal Automation ', weight = 50\n\n    @allure.title(f\"Selecting  a new Category\")\n    @allure.description(\"Selecting a new Category from Category Carousel \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/InventoryData/InventoryTestCase.xlsx\", \"ItemCarousel\"))\n    @unpack\n    def test_Add_newCategory_item(self, username, password, ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight):\n        self.LoginMethod.nativelogin(username, password)\n        try:\n            self.assertEqual(self.Inventory.selectCarouselItems(ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight),\n                             True, msg=\"Adding a New Category Failed \")\n        # Checking if assertion failed\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Failed_for_customer\", attachment_type=AttachmentType.PNG)\n>           self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\nE           AttributeError: 'TestInventory' object has no attribute 'log'\n\nTestInventory.py:61: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestInventory","time":{"start":1687503831457,"stop":1687503831458,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"Selecting a new Category from Category Carousel ","status":"broken","statusMessage":"AttributeError: 'TestInventory' object has no attribute 'log'","statusTrace":"self = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_item_6___frugal_latido_com_np____Test_123_____..._1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__BrowN_Leather_Beta_png____Frugal_Automation____50_>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nItemName = '(Automation) Item 64', name = 'AT-IT-64', code = 'T064'\nsku = 'AT064', tags = 'Auto Testing 64', color = 'Black'\ndescription = 'Performing this using automation scripts ', l_quantity = 1\nh_quantity = 1\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\BrowN Leather Beta.png'\nbrand = 'Frugal Automation ', weight = 50\n\n    @allure.title(f\"Selecting  a new Category\")\n    @allure.description(\"Selecting a new Category from Category Carousel \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/InventoryData/InventoryTestCase.xlsx\", \"ItemCarousel\"))\n    @unpack\n    def test_Add_newCategory_item(self, username, password, ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight):\n        self.LoginMethod.nativelogin(username, password)\n        try:\n>           self.assertEqual(self.Inventory.selectCarouselItems(ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight),\n                             True, msg=\"Adding a New Category Failed \")\n\nTestInventory.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_item_6___frugal_latido_com_np____Test_123_____..._1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__BrowN_Leather_Beta_png____Frugal_Automation____50_>\nfirst = None, second = True, msg = 'Adding a New Category Failed '\n\n    def _patched_equals(self, first, second, msg=None):\n        try:\n>           old(self, first, second, msg)\n\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_item_6___frugal_latido_com_np____Test_123_____..._1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__BrowN_Leather_Beta_png____Frugal_Automation____50_>\nfirst = None, second = True, msg = 'Adding a New Category Failed '\n\n    def assertEqual(self, first, second, msg=None):\n        \"\"\"Fail if the two objects are unequal as determined by the '=='\n           operator.\n        \"\"\"\n        assertion_func = self._getAssertEqualityFunc(first, second)\n>       assertion_func(first, second, msg=msg)\n\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python310\\lib\\unittest\\case.py:845: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_item_6___frugal_latido_com_np____Test_123_____..._1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__BrowN_Leather_Beta_png____Frugal_Automation____50_>\nfirst = None, second = True\nmsg = 'None != True : Adding a New Category Failed '\n\n    def _baseAssertEqual(self, first, second, msg=None):\n        \"\"\"The default assertEqual implementation, not type specific.\"\"\"\n        if not first == second:\n            standardMsg = '%s != %s' % _common_shorten_repr(first, second)\n            msg = self._formatMessage(msg, standardMsg)\n>           raise self.failureException(msg)\nE           AssertionError: None != True : Adding a New Category Failed\n\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python310\\lib\\unittest\\case.py:838: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <TestsCases.TestInventory.TestInventory testMethod=test_Add_newCategory_item_6___frugal_latido_com_np____Test_123_____..._1__1___E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__BrowN_Leather_Beta_png____Frugal_Automation____50_>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nItemName = '(Automation) Item 64', name = 'AT-IT-64', code = 'T064'\nsku = 'AT064', tags = 'Auto Testing 64', color = 'Black'\ndescription = 'Performing this using automation scripts ', l_quantity = 1\nh_quantity = 1\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\BrowN Leather Beta.png'\nbrand = 'Frugal Automation ', weight = 50\n\n    @allure.title(f\"Selecting  a new Category\")\n    @allure.description(\"Selecting a new Category from Category Carousel \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/InventoryData/InventoryTestCase.xlsx\", \"ItemCarousel\"))\n    @unpack\n    def test_Add_newCategory_item(self, username, password, ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight):\n        self.LoginMethod.nativelogin(username, password)\n        try:\n            self.assertEqual(self.Inventory.selectCarouselItems(ItemName, name, code, sku, tags, color, description, l_quantity, h_quantity, imgPath, brand, weight),\n                             True, msg=\"Adding a New Category Failed \")\n        # Checking if assertion failed\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Failed_for_customer\", attachment_type=AttachmentType.PNG)\n>           self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\nE           AttributeError: 'TestInventory' object has no attribute 'log'\n\nTestInventory.py:61: AttributeError","steps":[],"attachments":[{"uid":"99e07a0115cd3b10","name":"Failed_for_customer","source":"99e07a0115cd3b10.png","type":"image/png","size":108508},{"uid":"f676175b1fa6a5e4","name":"log","source":"f676175b1fa6a5e4.txt","type":"text/plain","size":953}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestInventory::0","time":{"start":1687504516076,"stop":1687504516076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Inventory"},{"name":"suite","value":"TestInventory"},{"name":"subSuite","value":"TestInventory"},{"name":"host","value":"0day"},{"name":"thread","value":"15472-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestInventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1f2469d03e86c708.json","parameterValues":[]}