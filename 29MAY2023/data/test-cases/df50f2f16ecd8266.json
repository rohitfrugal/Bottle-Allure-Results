{"uid":"df50f2f16ecd8266","name":"test_dashboard_totalOrder","fullName":"TestDashboard.TestDashboard#test_dashboard_totalOrder","historyId":"b3bd9775be2d3cbf789ad71ca9a230c1","time":{"start":1685339488802,"stop":1685339503773,"duration":14971},"status":"failed","statusMessage":"AssertionError: '272' != '366'\n- 272\n+ 366\n : Verification of total order tile failed.","statusTrace":"self = <TestsCases.TestDashboard.TestDashboard testMethod=test_dashboard_totalOrder>\n\n    @allure.story(\"Checking Total Order Tiles\")\n    @allure.severity(allure.severity_level.NORMAL)\n    # @data((\"frugal@latido.com.np\", \"Test@123\"))\n    def test_dashboard_totalOrder(self):\n        self.LoginMethod.nativelogin(self.driver, \"frugal@latido.com.np\", \"Test@123\")\n        try:\n            self.assertEqual(self.Dashboard.verify_total_order(), self.Dashboard.recent_top_order(), msg=\"Verification of total order tile failed.\")\n    \n        # Checking if assertion failed\n        except AssertionError as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"TestDashboardScreen\",\n                          attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\n>           raise e\n\nTestDashboard.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestDashboard.py:52: in test_dashboard_totalOrder\n    self.assertEqual(self.Dashboard.verify_total_order(), self.Dashboard.recent_top_order(), msg=\"Verification of total order tile failed.\")\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: '272' != '366'\nE   - 272\nE   + 366\nE    : Verification of total order tile failed.","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestDashboard","time":{"start":1685339438628,"stop":1685339438628,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: '272' != '366'\n- 272\n+ 366\n : Verification of total order tile failed.","statusTrace":"self = <TestsCases.TestDashboard.TestDashboard testMethod=test_dashboard_totalOrder>\n\n    @allure.story(\"Checking Total Order Tiles\")\n    @allure.severity(allure.severity_level.NORMAL)\n    # @data((\"frugal@latido.com.np\", \"Test@123\"))\n    def test_dashboard_totalOrder(self):\n        self.LoginMethod.nativelogin(self.driver, \"frugal@latido.com.np\", \"Test@123\")\n        try:\n            self.assertEqual(self.Dashboard.verify_total_order(), self.Dashboard.recent_top_order(), msg=\"Verification of total order tile failed.\")\n    \n        # Checking if assertion failed\n        except AssertionError as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"TestDashboardScreen\",\n                          attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\n>           raise e\n\nTestDashboard.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestDashboard.py:52: in test_dashboard_totalOrder\n    self.assertEqual(self.Dashboard.verify_total_order(), self.Dashboard.recent_top_order(), msg=\"Verification of total order tile failed.\")\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: '272' != '366'\nE   - 272\nE   + 366\nE    : Verification of total order tile failed.","steps":[],"attachments":[{"uid":"e485a47359fa4bf1","name":"TestDashboardScreen","source":"e485a47359fa4bf1.png","type":"image/png","size":126760},{"uid":"896ad67b2daab607","name":"log","source":"896ad67b2daab607.txt","type":"text/plain","size":158}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestDashboard::0","time":{"start":1685339550555,"stop":1685339550555,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"DashboardExecutions"},{"name":"severity","value":"normal"},{"name":"story","value":"Checking Total Order Tiles"},{"name":"suite","value":"TestDashboard"},{"name":"subSuite","value":"TestDashboard"},{"name":"host","value":"0day"},{"name":"thread","value":"1964-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestDashboard"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":6},"items":[{"uid":"871bbf41f955b34a","status":"failed","statusDetails":"AssertionError: '262' != '346'\n- 262\n+ 346\n : Verification of total order tile failed.","time":{"start":1685106680713,"stop":1685106695231,"duration":14518}},{"uid":"ca8c275ffd66a6ce","status":"passed","time":{"start":1685021702645,"stop":1685021712892,"duration":10247}},{"uid":"af0fcd7acd170d91","status":"passed","time":{"start":1684415288528,"stop":1684415298572,"duration":10044}},{"uid":"3a678a3fb40ac18f","status":"failed","statusDetails":"AssertionError: '211' != '210'\n- 211\n?   ^\n+ 210\n?   ^\n : Verification of total order tile failed.","time":{"start":1683885924655,"stop":1683885934837,"duration":10182}},{"uid":"e434c8d0a16eeb39","status":"passed","time":{"start":1683188308196,"stop":1683188318456,"duration":10260}}]},"tags":[]},"source":"df50f2f16ecd8266.json","parameterValues":[]}