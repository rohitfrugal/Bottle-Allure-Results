{"uid":"c9887a0d2dbabb46","name":"test_02_new_entry_2____Automation__Item_70____AT_IT_70____AKM_Leather___2000___2023_07_07___10___Good____By_Truck____By_Cash____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__","fullName":"TestReporting.TestReporting#test_02_new_entry_2____Automation__Item_70____AT_IT_70____AKM_Leather___2000___2023_07_07___10___Good____By_Truck____By_Cash____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__","historyId":"f590bda56773337eb46f8c18705abfd6","time":{"start":1688716529293,"stop":1688716573687,"duration":44394},"description":"Check for View more Details","descriptionHtml":"<p>Check for View more Details</p>\n","status":"failed","statusMessage":"AssertionError: False != True : Verification failed! for Details Page.","statusTrace":"self = <TestsCases.TestReporting.TestReporting testMethod=test_02_new_entry_2____Automation__Item_70____AT_IT_70____AKM_Leath...10___Good____By_Truck____By_Cash____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__>\nItemName = '(Automation) Item 70', productName = 'AT-IT-70'\nvendor_name = 'AKM Leather', price = 2000, date = '2023-07-07', quantity = 10\nquality = 'Good', transport_mode = 'By Truck', Pay_mode = 'By Cash'\nreceiver_name = 'Rohit'\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\Receipt.png'\n\n    @allure.description(\"Check for View more Details\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/ReportData/Report.xlsx\", \"viewMore\"))\n    @unpack\n    def test_02_new_entry(self, ItemName, productName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath):\n        self.LoginMethod.nativelogin(\"frugal@latido.com.np\", \"Test@123\")\n        try:\n            self.assertEqual(self.Report.check_details(ItemName, productName, vendor_name, price, date, quantity, quality,\n                    transport_mode, Pay_mode, receiver_name, imgPath),\n                    True, msg=\"Verification failed! for Details Page.\")\n    \n        # Checking if assertion failed\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"verify Report Landing \", attachment_type=AttachmentType.PNG)\n>           raise e\n\nTestReporting.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestReporting.py:67: in test_02_new_entry\n    self.assertEqual(self.Report.check_details(ItemName, productName, vendor_name, price, date, quantity, quality,\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: False != True : Verification failed! for Details Page.","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestReporting","time":{"start":1688716186721,"stop":1688716186722,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Check for View more Details","status":"failed","statusMessage":"AssertionError: False != True : Verification failed! for Details Page.","statusTrace":"self = <TestsCases.TestReporting.TestReporting testMethod=test_02_new_entry_2____Automation__Item_70____AT_IT_70____AKM_Leath...10___Good____By_Truck____By_Cash____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__>\nItemName = '(Automation) Item 70', productName = 'AT-IT-70'\nvendor_name = 'AKM Leather', price = 2000, date = '2023-07-07', quantity = 10\nquality = 'Good', transport_mode = 'By Truck', Pay_mode = 'By Cash'\nreceiver_name = 'Rohit'\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\Receipt.png'\n\n    @allure.description(\"Check for View more Details\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/ReportData/Report.xlsx\", \"viewMore\"))\n    @unpack\n    def test_02_new_entry(self, ItemName, productName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath):\n        self.LoginMethod.nativelogin(\"frugal@latido.com.np\", \"Test@123\")\n        try:\n            self.assertEqual(self.Report.check_details(ItemName, productName, vendor_name, price, date, quantity, quality,\n                    transport_mode, Pay_mode, receiver_name, imgPath),\n                    True, msg=\"Verification failed! for Details Page.\")\n    \n        # Checking if assertion failed\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"verify Report Landing \", attachment_type=AttachmentType.PNG)\n>           raise e\n\nTestReporting.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestReporting.py:67: in test_02_new_entry\n    self.assertEqual(self.Report.check_details(ItemName, productName, vendor_name, price, date, quantity, quality,\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: False != True : Verification failed! for Details Page.","steps":[],"attachments":[{"uid":"7d2088b7015bc0c1","name":"verify Report Landing ","source":"7d2088b7015bc0c1.png","type":"image/png","size":115463}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestReporting::0","time":{"start":1688716772216,"stop":1688716772216,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"Reporting Module Test Cases"},{"name":"severity","value":"normal"},{"name":"suite","value":"TestReporting"},{"name":"subSuite","value":"TestReporting"},{"name":"host","value":"0day"},{"name":"thread","value":"13416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestReporting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c9887a0d2dbabb46.json","parameterValues":[]}