{"uid":"b6f2e6eb581e3a29","name":"test_05_edit_product_subcategory_6___Product_Cat_edit_06____Product_Sub_category_06____Sub_category__Edit__06__","fullName":"Test_12_ProductCategory.TestProductCategory#test_05_edit_product_subcategory_6___Product_Cat_edit_06____Product_Sub_category_06____Sub_category__Edit__06__","historyId":"3db4c7e3a4817ec668dc19743e23f8d2","time":{"start":1692955371614,"stop":1692955382986,"duration":11372},"description":"To verify edit Product Sub-category. ","descriptionHtml":"<p>To verify edit Product Sub-category.</p>\n","status":"broken","statusMessage":"PermissionError: [WinError 5] Access is denied: 'C:\\\\Users\\\\HP\\\\.wdm\\\\drivers\\\\chromedriver\\\\win64\\\\116.0.5845.111\\\\chromedriver-win32\\\\chromedriver.exe' -> 'C:\\\\Users\\\\HP\\\\.wdm\\\\drivers\\\\chromedriver\\\\win64\\\\116.0.5845.111\\\\chromedriver.exe'","statusTrace":"self = <webdriver_manager.core.file_manager.FileManager object at 0x000001C01E682E00>\narchive_file = <webdriver_manager.core.archive.Archive object at 0x000001C01E680A90>\nto_directory = 'C:\\\\Users\\\\HP\\\\.wdm\\\\drivers\\\\chromedriver\\\\win64\\\\116.0.5845.111'\n\n    def __extract_zip(self, archive_file, to_directory):\n        zip_class = (LinuxZipFileWithPermissions if self._os_system_manager.get_os_name() == \"linux\" else zipfile.ZipFile)\n        archive = zip_class(archive_file.file_path)\n        try:\n>           archive.extractall(to_directory)\n\n..\\.venv\\lib\\site-packages\\webdriver_manager\\core\\file_manager.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile filename='C:\\\\Users\\\\HP\\\\.wdm\\\\drivers\\\\chromedriver\\\\win64\\\\116.0.5845.111\\\\chromedriver-win32.zip' mode='r'>\npath = 'C:\\\\Users\\\\HP\\\\.wdm\\\\drivers\\\\chromedriver\\\\win64\\\\116.0.5845.111'\nmembers = ['chromedriver-win32/LICENSE.chromedriver', 'chromedriver-win32/chromedriver.exe']\npwd = None\n\n    def extractall(self, path=None, members=None, pwd=None):\n        \"\"\"Extract all members from the archive to the current working\n           directory. `path' specifies a different directory to extract to.\n           `members' is optional and must be a subset of the list returned\n           by namelist().\n        \"\"\"\n        if members is None:\n            members = self.namelist()\n    \n        if path is None:\n            path = os.getcwd()\n        else:\n            path = os.fspath(path)\n    \n        for zipinfo in members:\n>           self._extract_member(zipinfo, path, pwd)\n\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python310\\lib\\zipfile.py:1634: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile filename='C:\\\\Users\\\\HP\\\\.wdm\\\\drivers\\\\chromedriver\\\\win64\\\\116.0.5845.111\\\\chromedriver-win32.zip' mode='r'>\nmember = <ZipInfo filename='chromedriver-win32/chromedriver.exe' compress_type=deflate filemode='-rwxrwxrwx' file_size=12396032 compress_size=6604269>\ntargetpath = 'C:\\\\Users\\\\HP\\\\.wdm\\\\drivers\\\\chromedriver\\\\win64\\\\116.0.5845.111\\\\chromedriver-win32\\\\chromedriver.exe'\npwd = None\n\n    def _extract_member(self, member, targetpath, pwd):\n        \"\"\"Extract the ZipInfo object 'member' to a physical\n           file on the path targetpath.\n        \"\"\"\n        if not isinstance(member, ZipInfo):\n            member = self.getinfo(member)\n    \n        # build the destination pathname, replacing\n        # forward slashes to platform specific separators.\n        arcname = member.filename.replace('/', os.path.sep)\n    \n        if os.path.altsep:\n            arcname = arcname.replace(os.path.altsep, os.path.sep)\n        # interpret absolute pathname as relative, remove drive letter or\n        # UNC path, redundant separators, \".\" and \"..\" components.\n        arcname = os.path.splitdrive(arcname)[1]\n        invalid_path_parts = ('', os.path.curdir, os.path.pardir)\n        arcname = os.path.sep.join(x for x in arcname.split(os.path.sep)\n                                   if x not in invalid_path_parts)\n        if os.path.sep == '\\\\':\n            # filter illegal characters on Windows\n            arcname = self._sanitize_windows_name(arcname, os.path.sep)\n    \n        targetpath = os.path.join(targetpath, arcname)\n        targetpath = os.path.normpath(targetpath)\n    \n        # Create all upper directories if necessary.\n        upperdirs = os.path.dirname(targetpath)\n        if upperdirs and not os.path.exists(upperdirs):\n            os.makedirs(upperdirs)\n    \n        if member.is_dir():\n            if not os.path.isdir(targetpath):\n                os.mkdir(targetpath)\n            return targetpath\n    \n        with self.open(member, pwd=pwd) as source, \\\n>            open(targetpath, \"wb\") as target:\nE            PermissionError: [Errno 13] Permission denied: 'C:\\\\Users\\\\HP\\\\.wdm\\\\drivers\\\\chromedriver\\\\win64\\\\116.0.5845.111\\\\chromedriver-win32\\\\chromedriver.exe'\n\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python310\\lib\\zipfile.py:1688: PermissionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <TestsCases.Test_12_ProductCategory.TestProductCategory testMethod=test_05_edit_product_subcategory_6___Product_Cat_edit_06____Product_Sub_category_06____Sub_category__Edit__06__>\n\n    def setUp(self):\n>       super().initialize_driver(\"chrome\")\n\nTest_12_ProductCategory.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Base\\BaseTest.py:35: in initialize_driver\n    self.service = Service(ChromeDriverManager().install())\n..\\.venv\\lib\\site-packages\\webdriver_manager\\chrome.py:40: in install\n    driver_path = self._get_driver_binary_path(self.driver)\n..\\.venv\\lib\\site-packages\\webdriver_manager\\core\\manager.py:41: in _get_driver_binary_path\n    binary_path = self._cache_manager.save_file_to_cache(driver, file)\n..\\.venv\\lib\\site-packages\\webdriver_manager\\core\\driver_cache.py:54: in save_file_to_cache\n    files = self.unpack_archive(archive, path)\n..\\.venv\\lib\\site-packages\\webdriver_manager\\core\\driver_cache.py:49: in unpack_archive\n    return self._file_manager.unpack_archive(archive, path)\n..\\.venv\\lib\\site-packages\\webdriver_manager\\core\\file_manager.py:57: in unpack_archive\n    return self.__extract_zip(archive_file, target_dir)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <webdriver_manager.core.file_manager.FileManager object at 0x000001C01E682E00>\narchive_file = <webdriver_manager.core.archive.Archive object at 0x000001C01E680A90>\nto_directory = 'C:\\\\Users\\\\HP\\\\.wdm\\\\drivers\\\\chromedriver\\\\win64\\\\116.0.5845.111'\n\n    def __extract_zip(self, archive_file, to_directory):\n        zip_class = (LinuxZipFileWithPermissions if self._os_system_manager.get_os_name() == \"linux\" else zipfile.ZipFile)\n        archive = zip_class(archive_file.file_path)\n        try:\n            archive.extractall(to_directory)\n        except Exception as e:\n            if e.args[0] not in [26, 13] and e.args[1] not in [\n                \"Text file busy\",\n                \"Permission denied\",\n            ]:\n                raise e\n            file_names = []\n            for n in archive.namelist():\n                if \"/\" not in n:\n                    file_names.append(n)\n                else:\n                    file_path, file_name = n.split(\"/\")\n                    full_file_path = os.path.join(to_directory, file_path)\n                    source = os.path.join(full_file_path, file_name)\n                    destination = os.path.join(to_directory, file_name)\n>                   os.replace(source, destination)\nE                   PermissionError: [WinError 5] Access is denied: 'C:\\\\Users\\\\HP\\\\.wdm\\\\drivers\\\\chromedriver\\\\win64\\\\116.0.5845.111\\\\chromedriver-win32\\\\chromedriver.exe' -> 'C:\\\\Users\\\\HP\\\\.wdm\\\\drivers\\\\chromedriver\\\\win64\\\\116.0.5845.111\\\\chromedriver.exe'\n\n..\\.venv\\lib\\site-packages\\webdriver_manager\\core\\file_manager.py:81: PermissionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestProductCategory","time":{"start":1692955186803,"stop":1692955186803,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"afterStages":[{"name":"_unittest_setUpClass_fixture_TestProductCategory::0","time":{"start":1692955383047,"stop":1692955383047,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Product Category"},{"name":"suite","value":"Test_12_ProductCategory"},{"name":"subSuite","value":"TestProductCategory"},{"name":"host","value":"0day"},{"name":"thread","value":"8508-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Test_12_ProductCategory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b6f2e6eb581e3a29.json","parameterValues":[]}