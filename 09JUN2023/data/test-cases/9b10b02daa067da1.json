{"uid":"9b10b02daa067da1","name":"test_new_entry_6____Automation__Item_30____Test036____Tester___2000___2023_06_08___10___Bad____By_Truck____By_Cash____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__","fullName":"TestReporting.TestReporting#test_new_entry_6____Automation__Item_30____Test036____Tester___2000___2023_06_08___10___Bad____By_Truck____By_Cash____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__","historyId":"9c2545328cabf3c94da778b15817dbad","time":{"start":1686304879779,"stop":1686304924968,"duration":45189},"status":"failed","statusMessage":"AssertionError: False != True : Verification failed! for Report List.","statusTrace":"self = <TestsCases.TestReporting.TestReporting testMethod=test_new_entry_6____Automation__Item_30____Test036____Tester___2000..._10___Bad____By_Truck____By_Cash____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__>\nItemName = '(Automation) Item 30', productName = 'Test036'\nvendor_name = 'Tester', price = 2000, date = '2023-06-08', quantity = 10\nquality = 'Bad', transport_mode = 'By Truck', Pay_mode = 'By Cash'\nreceiver_name = 'Rohit'\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\Receipt.png'\n\n    @allure.story(\"Check for new Entry\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/ReportData/Report.xlsx\", \"checkReport\"))\n    @unpack\n    def test_new_entry(self, ItemName, productName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath):\n        self.LoginMethod.nativelogin(\"frugal@latido.com.np\", \"Test@123\")\n        try:\n            self.assertEqual(self.Report.create_inventory_check(ItemName, productName, vendor_name, price, date, quantity, quality,\n                    transport_mode, Pay_mode, receiver_name, imgPath),\n                    True, msg=\"Verification failed! for Report List.\")\n    \n        # Checking if assertion failed\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"verify Report Landing \", attachment_type=AttachmentType.PNG)\n>           raise e\n\nTestReporting.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestReporting.py:51: in test_new_entry\n    self.assertEqual(self.Report.create_inventory_check(ItemName, productName, vendor_name, price, date, quantity, quality,\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: False != True : Verification failed! for Report List.","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestReporting","time":{"start":1686304630618,"stop":1686304630618,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: False != True : Verification failed! for Report List.","statusTrace":"self = <TestsCases.TestReporting.TestReporting testMethod=test_new_entry_6____Automation__Item_30____Test036____Tester___2000..._10___Bad____By_Truck____By_Cash____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__>\nItemName = '(Automation) Item 30', productName = 'Test036'\nvendor_name = 'Tester', price = 2000, date = '2023-06-08', quantity = 10\nquality = 'Bad', transport_mode = 'By Truck', Pay_mode = 'By Cash'\nreceiver_name = 'Rohit'\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\Receipt.png'\n\n    @allure.story(\"Check for new Entry\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/ReportData/Report.xlsx\", \"checkReport\"))\n    @unpack\n    def test_new_entry(self, ItemName, productName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath):\n        self.LoginMethod.nativelogin(\"frugal@latido.com.np\", \"Test@123\")\n        try:\n            self.assertEqual(self.Report.create_inventory_check(ItemName, productName, vendor_name, price, date, quantity, quality,\n                    transport_mode, Pay_mode, receiver_name, imgPath),\n                    True, msg=\"Verification failed! for Report List.\")\n    \n        # Checking if assertion failed\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"verify Report Landing \", attachment_type=AttachmentType.PNG)\n>           raise e\n\nTestReporting.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestReporting.py:51: in test_new_entry\n    self.assertEqual(self.Report.create_inventory_check(ItemName, productName, vendor_name, price, date, quantity, quality,\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: False != True : Verification failed! for Report List.","steps":[],"attachments":[{"uid":"6dfe51bd1e4f015f","name":"verify Report Landing ","source":"6dfe51bd1e4f015f.png","type":"image/png","size":191332}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestReporting::0","time":{"start":1686304924988,"stop":1686304924989,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"Check for new Entry"},{"name":"feature","value":"Reporting Module Test Cases"},{"name":"severity","value":"normal"},{"name":"suite","value":"TestReporting"},{"name":"subSuite","value":"TestReporting"},{"name":"host","value":"0day"},{"name":"thread","value":"5872-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestReporting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"9b10b02daa067da1.json","parameterValues":[]}