{"uid":"d115740779210c37","name":"Restocking the Items ","fullName":"TestInventory.TestInventory#test_restocking_item_6___frugal_latido_com_np____Test_123_____Automation__Item_54____Test054____Tester___2000___2023_05_24___10___Bad____By_Truck____By_Cash____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__","historyId":"b3f3a5ca4e3f3893028af70af5aa2aa4","time":{"start":1686297608017,"stop":1686297625028,"duration":17011},"status":"broken","statusMessage":"TypeError: catching classes that do not inherit from BaseException is not allowed","statusTrace":"self = <Pages.Inventory.InventoryPage.InventoryPage object at 0x000001E92226A4D0>\n\n    def click_on_inventoryTab(self):\n        try:\n>           return self.wait.until(EC.visibility_of_element_located(self.INVENTORY_TAB)).click()\n\n..\\Pages\\Inventory\\InventoryPage.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ab8cb6c86278a22ce8d89f0cf4c80e36\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001E92228E4D0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x011EA813+48355]\nE       \t(No symbol) [0x0117C4B1]\nE       \t(No symbol) [0x01085358]\nE       \t(No symbol) [0x010B09A5]\nE       \t(No symbol) [0x010B0B3B]\nE       \t(No symbol) [0x010DE232]\nE       \t(No symbol) [0x010CA784]\nE       \t(No symbol) [0x010DC922]\nE       \t(No symbol) [0x010CA536]\nE       \t(No symbol) [0x010A82DC]\nE       \t(No symbol) [0x010A93DD]\nE       \tGetHandleVerifier [0x0144AABD+2539405]\nE       \tGetHandleVerifier [0x0148A78F+2800735]\nE       \tGetHandleVerifier [0x0148456C+2775612]\nE       \tGetHandleVerifier [0x012751E0+616112]\nE       \t(No symbol) [0x01185F8C]\nE       \t(No symbol) [0x01182328]\nE       \t(No symbol) [0x0118240B]\nE       \t(No symbol) [0x01174FF7]\nE       \tBaseThreadInitThunk [0x76597D59+25]\nE       \tRtlInitializeExceptionChain [0x7706B74B+107]\nE       \tRtlClearBits [0x7706B6CF+191]\n\n..\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <TestsCases.TestInventory.TestInventory testMethod=test_restocking_item_6___frugal_latido_com_np____Test_123_____Autom..._10___Bad____By_Truck____By_Cash____Rohit____E___POM_for_Bottle__WebApp__TestData__InventoryData__Image__Receipt_png__>\nusername = 'frugal@latido.com.np', password = 'Test@123'\nItmeName = '(Automation) Item 54', productName = 'Test054'\nvendor_name = 'Tester', price = 2000, date = '2023-05-24', quantity = 10\nquality = 'Bad', transport_mode = 'By Truck', Pay_mode = 'By Cash'\nreceiver_name = 'Rohit'\nimgPath = 'E:\\\\POM_for_Bottle\\\\WebApp\\\\TestData\\\\InventoryData\\\\Image\\\\Receipt.png'\n\n    @allure.title(f\"Restocking the Items \")\n    @allure.story(\"Selecting a new Category and restocking the Items \")\n    @allure.severity(allure.severity_level.NORMAL)\n    @data(*Utils.read_xlsx(\"../TestData/InventoryData/InventoryTestCase.xlsx\", \"restocking\"))\n    @unpack\n    def test_restocking_item(self, username, password, ItmeName, productName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath):\n        self.LoginMethod.nativelogin(username, password)\n        try:\n>           self.assertEqual(self.Inventory.stockItem_for_normal_item(ItmeName, productName, vendor_name, price, date, quantity, quality, transport_mode, Pay_mode, receiver_name, imgPath),\n                             True, msg=\"Adding a New Stock Failed \")\n\nTestInventory.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\executions\\InventoryExecutions\\InventoryMethods.py:82: in stockItem_for_normal_item\n    self.navigate_to_Inventory()\n..\\executions\\InventoryExecutions\\InventoryMethods.py:17: in navigate_to_Inventory\n    self.Inventory.click_on_inventoryTab()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.Inventory.InventoryPage.InventoryPage object at 0x000001E92226A4D0>\n\n    def click_on_inventoryTab(self):\n        try:\n            return self.wait.until(EC.visibility_of_element_located(self.INVENTORY_TAB)).click()\n>       except {NoSuchElementException, TimeoutException, Exception}:\nE       TypeError: catching classes that do not inherit from BaseException is not allowed\n\n..\\Pages\\Inventory\\InventoryPage.py:114: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestInventory","time":{"start":1686297064920,"stop":1686297064920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"afterStages":[{"name":"_unittest_setUpClass_fixture_TestInventory::0","time":{"start":1686297762448,"stop":1686297762448,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"labels":[{"name":"story","value":"Selecting a new Category and restocking the Items "},{"name":"feature","value":"Inventory"},{"name":"severity","value":"normal"},{"name":"suite","value":"TestInventory"},{"name":"subSuite","value":"TestInventory"},{"name":"host","value":"0day"},{"name":"thread","value":"15292-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestInventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"d115740779210c37.json","parameterValues":[]}