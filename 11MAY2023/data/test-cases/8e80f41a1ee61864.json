{"uid":"8e80f41a1ee61864","name":"Checking Dashboard data","fullName":"TestInventDashboard.TestInventDashboard#test_get_inventDash_details","historyId":"5d65d70d22c85c3ce76d7dccea8bf164","time":{"start":1683811171352,"stop":1683811185853,"duration":14501},"status":"failed","statusMessage":"AssertionError: False != True : Verification Failed to mismatch title.","statusTrace":"self = <TestsCases.TestInventDashboard.TestInventDashboard testMethod=test_get_inventDash_details>\n\n    @allure.title(f\"Checking Dashboard data\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_get_inventDash_details(self):\n        self.LoginMethod.nativelogin(self.driver, \"frugal@latido.com.np\", \"Test@123\")\n        try:\n            self.assertEqual(self.InventDash.execute_info_gather(), True, msg=\"Verification Failed to mismatch title.\")\n        # Checking if assertion failed\n        except AssertionError as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Failed_for_customer\", attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\n>           raise e\n\nTestInventDashboard.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestInventDashboard.py:34: in test_get_inventDash_details\n    self.assertEqual(self.InventDash.execute_info_gather(), True, msg=\"Verification Failed to mismatch title.\")\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: False != True : Verification Failed to mismatch title.","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestInventDashboard","time":{"start":1683811171351,"stop":1683811171351,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: False != True : Verification Failed to mismatch title.","statusTrace":"self = <TestsCases.TestInventDashboard.TestInventDashboard testMethod=test_get_inventDash_details>\n\n    @allure.title(f\"Checking Dashboard data\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_get_inventDash_details(self):\n        self.LoginMethod.nativelogin(self.driver, \"frugal@latido.com.np\", \"Test@123\")\n        try:\n            self.assertEqual(self.InventDash.execute_info_gather(), True, msg=\"Verification Failed to mismatch title.\")\n        # Checking if assertion failed\n        except AssertionError as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Failed_for_customer\", attachment_type=AttachmentType.PNG)\n            self.log.error(f\"Assertion failed here while finding element. {str(e)}\")\n>           raise e\n\nTestInventDashboard.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestInventDashboard.py:34: in test_get_inventDash_details\n    self.assertEqual(self.InventDash.execute_info_gather(), True, msg=\"Verification Failed to mismatch title.\")\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: False != True : Verification Failed to mismatch title.","steps":[],"attachments":[{"uid":"cba0a65861400d43","name":"Failed_for_customer","source":"cba0a65861400d43.png","type":"image/png","size":120534},{"uid":"66b80fc4137e898e","name":"log","source":"66b80fc4137e898e.txt","type":"text/plain","size":154}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestInventDashboard::0","time":{"start":1683811215617,"stop":1683811215617,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"Inventory Dashboard"},{"name":"severity","value":"normal"},{"name":"suite","value":"TestInventDashboard"},{"name":"subSuite","value":"TestInventDashboard"},{"name":"host","value":"0day"},{"name":"thread","value":"9148-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestInventDashboard"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"8e80f41a1ee61864.json","parameterValues":[]}