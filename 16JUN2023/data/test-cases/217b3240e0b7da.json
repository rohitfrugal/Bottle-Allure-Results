{"uid":"217b3240e0b7da","name":"Checking Dashboard data","fullName":"TestInventDashboard.TestInventDashboard#test_get_inventDash_details","historyId":"5d65d70d22c85c3ce76d7dccea8bf164","time":{"start":1686892406229,"stop":1686892422330,"duration":16101},"status":"failed","statusMessage":"AssertionError: False != True : Verification Failed to mismatch data.","statusTrace":"self = <TestsCases.TestInventDashboard.TestInventDashboard testMethod=test_get_inventDash_details>\n\n    @allure.title(f\"Checking Dashboard data\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_get_inventDash_details(self):\n        self.LoginMethod.nativelogin(\"frugal@latido.com.np\", \"Test@123\")\n        try:\n            self.assertEqual(self.InventDash.execute_info_gather(), True, msg=\"Verification Failed to mismatch data.\")\n        # Checking if assertion failed\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Failed_for_customer\", attachment_type=AttachmentType.PNG)\n>           raise e\n\nTestInventDashboard.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestInventDashboard.py:32: in test_get_inventDash_details\n    self.assertEqual(self.InventDash.execute_info_gather(), True, msg=\"Verification Failed to mismatch data.\")\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: False != True : Verification Failed to mismatch data.","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestInventDashboard","time":{"start":1686892406229,"stop":1686892406229,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: False != True : Verification Failed to mismatch data.","statusTrace":"self = <TestsCases.TestInventDashboard.TestInventDashboard testMethod=test_get_inventDash_details>\n\n    @allure.title(f\"Checking Dashboard data\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_get_inventDash_details(self):\n        self.LoginMethod.nativelogin(\"frugal@latido.com.np\", \"Test@123\")\n        try:\n            self.assertEqual(self.InventDash.execute_info_gather(), True, msg=\"Verification Failed to mismatch data.\")\n        # Checking if assertion failed\n        except (NoSuchElementException, AssertionError, TimeoutException) as e:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Failed_for_customer\", attachment_type=AttachmentType.PNG)\n>           raise e\n\nTestInventDashboard.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTestInventDashboard.py:32: in test_get_inventDash_details\n    self.assertEqual(self.InventDash.execute_info_gather(), True, msg=\"Verification Failed to mismatch data.\")\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\diff_tools.py:33: in _patched_equals\n    old(self, first, second, msg)\nE   AssertionError: False != True : Verification Failed to mismatch data.","steps":[],"attachments":[{"uid":"41be6b3de423a78e","name":"Failed_for_customer","source":"41be6b3de423a78e.png","type":"image/png","size":133598}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestInventDashboard::0","time":{"start":1686892456740,"stop":1686892456740,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Inventory Dashboard"},{"name":"suite","value":"TestInventDashboard"},{"name":"subSuite","value":"TestInventDashboard"},{"name":"host","value":"0day"},{"name":"thread","value":"15136-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestInventDashboard"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"82f6eb238f1b7cf0","status":"broken","statusDetails":"AttributeError: 'TestInventDashboard' object has no attribute 'log'","time":{"start":1686310470506,"stop":1686310487019,"duration":16513}},{"uid":"bef155ae2276b9c4","status":"failed","statusDetails":"AssertionError: False != True : Verification Failed to mismatch data.","time":{"start":1685711249653,"stop":1685711264211,"duration":14558}},{"uid":"e524661ca1e50706","status":"failed","statusDetails":"AssertionError: False != True : Verification Failed to mismatch title.","time":{"start":1685345301306,"stop":1685345316620,"duration":15314}},{"uid":"b98dd8a6911e46a0","status":"failed","statusDetails":"AssertionError: False != True : Verification Failed to mismatch title.","time":{"start":1685108416030,"stop":1685108428032,"duration":12002}},{"uid":"d4ec6b04be9a0634","status":"failed","statusDetails":"AssertionError: False != True : Verification Failed to mismatch title.","time":{"start":1685025681328,"stop":1685025693680,"duration":12352}},{"uid":"acb555d84df84e3e","status":"failed","statusDetails":"AssertionError: False != True : Verification Failed to mismatch title.","time":{"start":1684417479665,"stop":1684417493560,"duration":13895}},{"uid":"1d642ed5e6ef81e5","status":"failed","statusDetails":"AssertionError: False != True : Verification Failed to mismatch title.","time":{"start":1683886067684,"stop":1683886081261,"duration":13577}}]},"tags":[]},"source":"217b3240e0b7da.json","parameterValues":[]}